<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[十诫空洞]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://decaylong.net/"/>
  <updated>2015-06-08T05:38:19.000Z</updated>
  <id>http://decaylong.net/</id>
  
  <author>
    <name><![CDATA[DecayLong]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[[Bukkit Plugin Dev]学习笔记一:搭建环境及创建自己的第一个插件与模板]]></title>
    <link href="http://decaylong.net/2015-01-26/Bukkit-Plugin-Dev-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%9A%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6%E4%B8%8E%E6%A8%A1%E6%9D%BF/"/>
    <id>http://decaylong.net/2015-01-26/Bukkit-Plugin-Dev-学习笔记一：搭建环境及创建自己的第一个插件与模板/</id>
    <published>2015-01-26T14:42:32.000Z</published>
    <updated>2015-06-08T05:38:19.000Z</updated>
    <content type="html"><![CDATA[<h1 id="1-工具">1.工具</h1><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" title="Java SE - Downloads | Oracle Technology Network | Oracle" target="_blank" rel="external">JDK</a>：插件开发自然少不了Java语言，所以前提还是得懂得基础的Java开发才行</p>
<p><a href="http://maven.apache.org/index.html" title="Maven - Welcome to Apache Maven" target="_blank" rel="external">Maven</a>：水桶服的插件项目是用Maven工具来进行管理的，所以少不了</p>
<p><a href="http://eclipse.org/" title="Eclipse Luna" target="_blank" rel="external">Eclipse</a>、<a href="https://www.jetbrains.com/idea/" title="IntelliJ IDEA — The Most Intelligent Java IDE" target="_blank" rel="external">IntelliJ IDEA</a>、<a href="https://netbeans.org/" title="Welcome to NetBeans" target="_blank" rel="external">NetBeans</a>：开发工具IDE，三选一就行了，哪个顺手用哪个或想学哪个用哪个了，随意</p>
<p><a href="https://github.com/" title="GitHub" target="_blank" rel="external">Git</a>：使用Git或者其他的版本管理工具来管理你的项目，可选</p>
<p>工具的安装就不讲了，百度一下就有不少资料了。（旧版本的Eclipse可能没有集成M2Eclipse插件，所以需要自己弄一下，不过较新版本的Eclipse就没这烦恼）</p>
<a id="more"></a>
<h1 id="2-创建第一个Bukkit_Plugin项目">2.创建第一个Bukkit Plugin项目</h1><p>因为个人想学习IntelliJ IDEA的使用，故以下均是用此工具来讲解了。其他IDE平台其实也大同小异的。</p>
<p>当前最新的IDEA是14.02</p>
<p><a href="/images/2015/01/1.png"><img src="/images/2015/01/1.png" alt="版本14.02"></a></p>
<h2 id="创建新工程">创建新工程</h2><p>点击创建一个新工程，选择Maven项目，下一步。</p>
<p><a href="/images/2015/01/2.png"><img src="/images/2015/01/2.png" alt="创建一个Maven项目"></a></p>
<p>GroupID是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。</p>
<p>ArtifactID就是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。</p>
<p>Version就是这个项目的版本号了。</p>
<p>关于GroupID，假如你有一个域名 example.com 那么你可以填写成 com.example ，比如我的域名是decaylong.net，那么此处我写成 net.decaylong，然后在再加上你的项目的名字，比如我的项目名称是SamplePlugin，那么最后我的GroupID就是 net.decaylong.sampleplugin</p>
<p>ArtifactID在这就是SamplePlugin</p>
<p><a href="/images/2015/01/31.png"><img src="/images/2015/01/31.png" alt=""></a></p>
<p>这里Project相对于Eclipse的WorkSpace的概念，Module相对于Eclipse的project概念，直接把Project name改为你的项目名称就行了</p>
<p><a href="/images/2015/01/4.png"><img src="/images/2015/01/4.png" alt=""></a></p>
<p>项目创建完是这个样子了</p>
<p><a href="/images/2015/01/5.png"><img src="/images/2015/01/5.png" alt="项目创建完成"></a></p>
<h2 id="配置项目以开发插件">配置项目以开发插件</h2><p>接下来引用Bukkit的API，打开你的pom.xml文件，加入以下内容到pom.xml文件里的标签前。</p>
<p>build标签配置你的项目的编译版本，看一下<a href="http://mcstats.org/global/" title="MCstats" target="_blank" rel="external">MCstats</a>，普遍的服务器都是用的1.7版本java，只有少数1.6,而1.8只占1.7的四分之一而已，如果你的项目里会用到1.7及以上版本的特性的话，还是得用相应的版本，如果不用的话，其实1.6版也是无妨的，看需求了。</p>
<p>repositories标签引用了bukkit的API仓库。</p>
<p>dependencies标签指明我们的项目是依赖于bukkitAPI仓库里的哪个版本，关于版本，可以在version标签上注释的那个连接里，找到你想要开发的插件所对应的水桶服版本，替换即可。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">build</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.3.2<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">source</span>&gt;</span>1.6<span class="tag">&lt;/<span class="title">source</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">target</span>&gt;</span>1.6<span class="tag">&lt;/<span class="title">target</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">repositories</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">repository</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">id</span>&gt;</span>bukkit-repo<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">url</span>&gt;</span>http://repo.bukkit.org/content/groups/public/<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.bukkit<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>bukkit<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Change "1.7.2-R0.2" to the version you wanna to develop,find the</span><br><span class="line">			versions from "http://repo.bukkit.org/content/groups/public/org/bukkit/bukkit/" --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">version</span>&gt;</span>1.7.2-R0.2<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>保存后需要更新一下项目的依赖包后方可继续后续的内容。只需在窗口右侧的“Maven Project”里点击“Generate Sources and Update Folders For All Projects”按键，如下图所示，也可以直接右击项目 -&gt; Maven -&gt;Generate Sources and Update Folders For All Projects.</p>
<p><a href="/images/2015/01/update.png"><img src="/images/2015/01/update.png" alt="更新依赖包"></a></p>
<p>这个过程会下载Bukkit的API包，如果下载出问题就开下VPN下载吧，直到运行完成就可以了。</p>
<h2 id="插件主类">插件主类</h2><p>项目的依赖包初始化后就可以开始创建我们插件的主类，先在src -&gt; main -&gt; java下创建我们的包，名字同前面填写GroupID时一样，这里我创建的是”net.decaylong.sampleplugin”;</p>
<p><a href="/images/2015/01/7.png"><img src="/images/2015/01/7.png" alt="创建包"></a></p>
<p>然后在我们的包下新建我们的主类，在新建的包上右键 -&gt; New -&gt; Java Class，名字同ArtifactID的值，这里为SamplePlugin。</p>
<p><a href="/images/2015/01/8.png"><img src="/images/2015/01/8.png" alt="新建主类"></a></p>
<p>插件的主类需要继承BukkitAPI里的JavaPlugin类，所以需要修改下我们的代码，导入相应的包，让我们的类继承JavaPlugin，如下：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.decaylong.sampleplugin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bukkit.plugin.java.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by DecayLong on 2015/1/26.</span><br><span class="line"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SamplePlugin</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JavaPlugin</span>&#123;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="重要的plugin-yml文件">重要的plugin.yml文件</h2><p>为了让服务器能够加载我们的插件，就得建个plugin.yml文件，让服务器知道我们插件的一些信息，右键main下的resources文件夹 -&gt; New -&gt; File。</p>
<p>name即插件的名称，main是插件的主类（包名.类名），version插件的版本<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">name</span>: <span class="string">SamplePlugin</span></span><br><span class="line"><span class="attribute">main</span>: <span class="string">net.decaylong.sampleplugin.SamplePlugin</span></span><br><span class="line"><span class="attribute">version</span>: <span class="string">1.0-SNAPSHOT</span></span><br></pre></td></tr></table></figure></p>
<h2 id="插件的启用与禁用回调函数">插件的启用与禁用回调函数</h2><p>现在既然服务器能够加载我们的插件了，那么我们就得对服务器的加载动作做出反应了，在主类的编辑窗口里按ctrl+O 或者 菜单Code -&gt; Override Methods…; 打开复写函数窗口，按住ctrl键，选择onDisable()及onEnable()这两函数，确定。</p>
<p><a href="/images/2015/01/9.png"><img src="/images/2015/01/9.png" alt="选择复写函数"></a></p>
<p><a href="/images/2015/01/10.png"><img src="/images/2015/01/10.png" alt="复写函数"></a></p>
<p>为了直观的让我们知道我们的插件被服务器加载了，并且我们能对其进行操作，我们在这复写的两个函数里各打印一句话，修改后代码如下：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.decaylong.sampleplugin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bukkit.plugin.java.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by DecayLong on 2015/1/26.</span><br><span class="line"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SamplePlugin</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JavaPlugin</span> &#123;</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public void onDisable() &#123;</span><br><span class="line">        getLogger().info(<span class="string">"Plugin: SamplePlugin is now off!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public void onEnable() &#123;</span><br><span class="line">        getLogger().info(<span class="string">"Plugin: SamplePlugin is now on!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="第一个插件的诞生">第一个插件的诞生</h2><p>到这里我们的第一个水桶服插件就开发完成了，接下来就是编译打包然后放服务器里运行一下看看了。点开IDEA窗口右边的“Maven Projects”，展开“Lifecycle”，右击“package”，运行“Run ‘SamplePlugin [package]’”。第一次编译需要下载Maven的一些包，所以需要点时间，如果没法下载或者下完后编译有问题，可以考虑开VPN再重新下一遍，毕竟国外的东西，国内想用还是多多少少有些许问题。</p>
<p><a href="/images/2015/01/19.png"><img src="/images/2015/01/19.png" alt=""></a></p>
<p><a href="/images/2015/01/20.png"><img src="/images/2015/01/20.png" alt=""></a></p>
<p>编译完后在项目的根目录下有个target文件夹，编译后的jar包就在这了，复制到服务器的plugins文件夹里，运行服务器就可以看到我们的插件已经加载进服务器了，键入reload命令，插件也会如愿的被停止后再启用</p>
<p><a href="/images/2015/01/11.png"><img src="/images/2015/01/11.png" alt="服务器加载插件"></a></p>
<p><a href="/images/2015/01/12.png"><img src="/images/2015/01/12.png" alt="被停用"></a></p>
<h1 id="3-创建插件开发模板">3.创建插件开发模板</h1><h2 id="创建模板">创建模板</h2><p>Maven有个命令可直接依靠当前项目来创建模板<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:create-<span class="keyword">from</span>-<span class="keyword">project</span></span><br></pre></td></tr></table></figure></p>
<p>IDEA的Maven Projects窗口内的工具栏有个“Execute Maven Goal”按键，点击，输入 “clean archetype:create-from-project”，运行。</p>
<p><a href="/images/2015/01/13.png"><img src="/images/2015/01/13.png" alt="创建模板"></a></p>
<h2 id="修改模板">修改模板</h2><p>整个模板都在target/generated-sources/archetype目录下，那么接下来以在这个文件夹为根目录，需要改的文件如图所示</p>
<p><a href="/images/2015/01/15.png"><img src="/images/2015/01/15.png" alt="修改文件"></a></p>
<p>SamplePlugin.java：右键 -&gt; Refactor -&gt; Rename File… 修改文件名为“__artifactId__.java”，注意前后各两个下划线，共四个下划线</p>
<p>plugin.yml：打开此文件，内存替换成：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">name</span>: <span class="string">$&#123;artifactId&#125;</span></span><br><span class="line"><span class="attribute">main</span>: <span class="string">$&#123;package&#125;.$&#123;artifactId&#125;</span></span><br><span class="line"><span class="attribute">version</span>: <span class="string">$&#123;version&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>archetype-metadata.xml：因为创建模板的时候，Maven把工程目录下的一些无关紧要的文件也列入模板列表里了，这些文件我们并不需要，所以删除它们的记录以及文件。在archetype-descriptor标签里，只留下directory标签内容为：“src/main/java” 以及 “src/main/resources”的fileSet标签，其他的fileSet标签都删除，然后在directory标签内容为：“src/main/resources”对应的fileSet标签里添加属性“filtered=”true””，修改后内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">archetype-descriptor</span> <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/plugins/maven-archetype-plugin/archetype-descriptor/1.0.0 http://maven.apache.org/xsd/archetype-descriptor-1.0.0.xsd"</span> <span class="attribute">name</span>=<span class="value">"SamplePlugin"</span></span><br><span class="line">    <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/plugins/maven-archetype-plugin/archetype-descriptor/1.0.0"</span></span><br><span class="line">    <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">fileSets</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">fileSet</span> <span class="attribute">filtered</span>=<span class="value">"true"</span> <span class="attribute">packaged</span>=<span class="value">"true"</span> <span class="attribute">encoding</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="title">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">include</span>&gt;</span>**/*.java<span class="tag">&lt;/<span class="title">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">fileSet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">fileSet</span> <span class="attribute">filtered</span>=<span class="value">"true"</span> <span class="attribute">encoding</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="title">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="title">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">fileSet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">fileSets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">archetype-descriptor</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>改完后把src/main/resources/archetype-resources下的“.idea”文件夹以及“.iml”文件删除</p>
<p>pom.xml：注意是target/generated-sources/archetype文件夹下的pom.xml。把groupId改下，后面加上”_archetype”，便于我们辨认，再把version改为1.0，这是我们的1.0正式版模板，当然这一步看个人爱好了，不想改就不改了，只是为了好看点。</p>
<h2 id="安装模板到本地仓库">安装模板到本地仓库</h2><p>运行cmd，切换目录到项目的target/generated-sources/archetype文件夹下，即archetype项目的根目录，运行<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean install</span><br></pre></td></tr></table></figure></p>
<p><a href="/images/2015/01/16.png"><img src="/images/2015/01/16.png" alt="安装模板到本地仓库"></a></p>
<p>到这我们的模板就创建完成了</p>
<h1 id="4-使用模板">4.使用模板</h1><p>新建一个Maven项目，勾选“Create from archetype”，因为IDEA的Maven插件没法自己加载本地的archetype，所以得自己手动添加了（Eclipse就没这问题），点击“Add Archetype..”，填写我们的模板的GroupId、ArtifactId、Version（<strong>ps：这三个值是以“target\generated-sources\archetype”这目录下的“pom.xml”文件里的值为准</strong>），然后确认。</p>
<p><a href="/images/2015/01/17.png"><img src="/images/2015/01/17.png" alt="添加archetype"></a></p>
<p><a href="/images/2015/01/18.png"><img src="/images/2015/01/18.png" alt="18"></a></p>
<p>接下来就跟创建第一个项目是一样的操作了。</p>
<p>填写了那三个值后下一步时Maven的一些配置信息，让他默认就行了，项目创建完成后可能Maven处理的速度会比较慢，耐心等待它跑完。如果右上角有提示你导入Maven Projects，请点击 Enable Auto-Import 就行了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1-工具">1.工具</h1><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" title="Java SE - Downloads | Oracle Technology Network | Oracle">JDK</a>：插件开发自然少不了Java语言，所以前提还是得懂得基础的Java开发才行</p>
<p><a href="http://maven.apache.org/index.html" title="Maven - Welcome to Apache Maven">Maven</a>：水桶服的插件项目是用Maven工具来进行管理的，所以少不了</p>
<p><a href="http://eclipse.org/" title="Eclipse Luna">Eclipse</a>、<a href="https://www.jetbrains.com/idea/" title="IntelliJ IDEA — The Most Intelligent Java IDE">IntelliJ IDEA</a>、<a href="https://netbeans.org/" title="Welcome to NetBeans">NetBeans</a>：开发工具IDE，三选一就行了，哪个顺手用哪个或想学哪个用哪个了，随意</p>
<p><a href="https://github.com/" title="GitHub">Git</a>：使用Git或者其他的版本管理工具来管理你的项目，可选</p>
<p>工具的安装就不讲了，百度一下就有不少资料了。（旧版本的Eclipse可能没有集成M2Eclipse插件，所以需要自己弄一下，不过较新版本的Eclipse就没这烦恼）</p>]]>
    
    </summary>
    
      <category term="学习笔记" scheme="http://decaylong.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Bukkit Plugin" scheme="http://decaylong.net/categories/Bukkit-Plugin/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于pip的一些问题]]></title>
    <link href="http://decaylong.net/2014-11-07/%E5%85%B3%E4%BA%8Epip%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://decaylong.net/2014-11-07/关于pip的一些问题/</id>
    <published>2014-11-07T05:45:41.000Z</published>
    <updated>2015-06-05T06:45:13.000Z</updated>
    <content type="html"><![CDATA[<p>当在<a href="https://pypi.python.org/pypi" title="PyPI - the Python Package Index" target="_blank" rel="external"> pypi</a> 找包来安装的时候我们需要先为Python安装 <a href="https://pip.pypa.io/en/latest/installing.html" title="pip Installation" target="_blank" rel="external">pip</a> 才行,按照这个<a href="https://pip.pypa.io/en/latest/installing.html" title="pip Installation" target="_blank" rel="external">链接</a>的方法安装完后（记得在环境变量PATH加上python安装目录下的Scripts 文件夹如：D:\Program Files\Python2\Scripts\），运行时出现：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Fatal <span class="keyword">error</span> <span class="keyword">in</span> launcher: Unable to create process using '<span class="string">""</span><span class="keyword">D</span>:\<span class="keyword">Program</span> Files\Python2\python.exe<span class="string">""</span> <span class="string">"D:\Program Files\Python2\Scripts\pip.exe"</span> '</span><br></pre></td></tr></table></figure></p>
<p>关于这问题 <a href="http://stackoverflow.com/questions/24627525/fatal-error-in-launcher-unable-to-create-process-using-c-program-files-x86" target="_blank" rel="external">这里</a> 有一些讨论。</p>
<p>在这些讨论里有人提到了 <a href="https://pip.pypa.io/en/latest/installing.html" title="pip Installation" target="_blank" rel="external">pip Installation</a> 教程里有提到：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -<span class="keyword">m</span> pip install -<span class="keyword">U</span> pip</span><br></pre></td></tr></table></figure></p>
<p>那么我们就可以另辟蹊径了</p>
<p>在 python 安装目录下的 Scripts 文件夹里新建一个 pip.bat 文件  里面可以这么写：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> -m pip <span class="variable">%1</span> <span class="variable">%2</span> <span class="variable">%3</span> <span class="variable">%4</span> <span class="variable">%5</span> <span class="variable">%6</span> <span class="variable">%7</span> <span class="variable">%8</span> <span class="variable">%9</span></span><br></pre></td></tr></table></figure></p>
<p>还要记得把原来 Scripts 文件夹下的 pip.exe 删除或者改名</p>
<p>这样我们就可以直接使用<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install <span class="package"><span class="keyword">package</span></span></span><br></pre></td></tr></table></figure></p>
<p>来安装我们想要的包了</p>
<p>============================</p>
<p>关于安装包的问题，用pip可能会因网络问题而安装不了，那么就可以直接下载该包，解压后里面有一个 setup.py</p>
<p>在命令行下输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup<span class="class">.py</span> install</span><br></pre></td></tr></table></figure></p>
<p>就可以安装了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>当在<a href="https://pypi.python.org/pypi" title="PyPI - the Python Package Index" target="_blank" rel="external"> pypi</a> 找包来安装的时候我们需要先为P]]>
    </summary>
    
      <category term="pip" scheme="http://decaylong.net/tags/pip/"/>
    
      <category term="pypi" scheme="http://decaylong.net/tags/pypi/"/>
    
      <category term="Python" scheme="http://decaylong.net/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 在launcher上添加及删除Shortcut方法]]></title>
    <link href="http://decaylong.net/2014-09-03/Android-%E5%9C%A8launcher%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%8F%8A%E5%88%A0%E9%99%A4Shortcut%E6%96%B9%E6%B3%95/"/>
    <id>http://decaylong.net/2014-09-03/Android-在launcher上添加及删除Shortcut方法/</id>
    <published>2014-09-03T08:37:51.000Z</published>
    <updated>2015-06-05T06:45:13.000Z</updated>
    <content type="html"><![CDATA[<p>需要在Manifest里添加两个权限：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="property">name</span>=<span class="string">"com.android.launcher.permission.INSTALL_SHORTCUT"</span> /&gt;</span><br><span class="line">&lt;uses-permission android:<span class="property">name</span>=<span class="string">"com.android.launcher.permission.UNINSTALL_SHORTCUT"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>添加完就可以照搬下面的代码来实现了</p>
<p><strong>添加Shortcut：</strong><br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Intent intent1 = new Intent<span class="params">(<span class="string">"android.intent.action.MAIN"</span>)</span>;</span><br><span class="line"><span class="comment">//替换自己项目的</span></span><br><span class="line">intent1.setClass<span class="params">(MainActivity.this,MainActivity.class)</span>;</span><br><span class="line">intent1.addCategory<span class="params">(<span class="string">"android.intent.category.LAUNCHER"</span>)</span>;</span><br><span class="line"></span><br><span class="line">Intent intent2 = new Intent<span class="params">()</span>;</span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.INTENT"</span>,intent1)</span>;</span><br><span class="line"><span class="comment">//把Shortcut的名字改为自己项目的</span></span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.NAME"</span>,<span class="string">"MainActivity"</span>)</span>;</span><br><span class="line"><span class="comment">//把context改为自己项目的</span></span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.ICON_RESOURCE"</span>,Intent.ShortcutIconResource.fromContext<span class="params">(MainActivity.this, R.drawable.icon)</span>)</span>;</span><br><span class="line"><span class="comment">//这里的覆盖参数不管设置为true还是false都没啥效果，不知是为何</span></span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"duplicate"</span>, <span class="literal">false</span>)</span>;</span><br><span class="line">intent2.setAction<span class="params">(<span class="string">"com.android.launcher.action.INSTALL_SHORTCUT"</span>)</span>;</span><br><span class="line">sendOrderedBroadcast<span class="params">(intent2, null)</span>;</span><br></pre></td></tr></table></figure></p>
<p><strong>删除Shortcut：</strong><br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Intent intent1 = new Intent<span class="params">(<span class="string">"android.intent.action.MAIN"</span>)</span>;</span><br><span class="line"><span class="comment">//替换为自己项目的</span></span><br><span class="line">intent1.setClass<span class="params">(MainActivity.this,MainActivity.class)</span>;</span><br><span class="line">intent1.addCategory<span class="params">(<span class="string">"android.intent.category.LAUNCHER"</span>)</span>;</span><br><span class="line"></span><br><span class="line">Intent intent2 = new Intent<span class="params">()</span>;</span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.INTENT"</span>,intent1)</span>;</span><br><span class="line"><span class="comment">//把Shortcut的名字改为自己项目的</span></span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.NAME"</span>,<span class="string">"MainActivity"</span>)</span>;</span><br><span class="line"><span class="comment">//把context改为自己项目的.  ps:此处不设置图标也无所谓</span></span><br><span class="line">intent2.putExtra<span class="params">(<span class="string">"android.intent.extra.shortcut.ICON_RESOURCE"</span>,Intent.ShortcutIconResource.fromContext<span class="params">(MainActivity.this, R.drawable.icon)</span>)</span>;</span><br><span class="line">intent2.setAction<span class="params">(<span class="string">"com.android.launcher.action.UNINSTALL_SHORTCUT"</span>)</span>;</span><br><span class="line">sendOrderedBroadcast<span class="params">(intent2, null)</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>需要在Manifest里添加两个权限：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span clas]]>
    </summary>
    
      <category term="Tips" scheme="http://decaylong.net/tags/Tips/"/>
    
      <category term="快捷方式" scheme="http://decaylong.net/tags/%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/"/>
    
      <category term="Android" scheme="http://decaylong.net/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[获取 Android 自定义资源文件调用URI]]></title>
    <link href="http://decaylong.net/2014-08-30/%E8%8E%B7%E5%8F%96-Android-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8URI/"/>
    <id>http://decaylong.net/2014-08-30/获取-Android-自定义资源文件调用URI/</id>
    <published>2014-08-30T08:26:52.000Z</published>
    <updated>2015-06-05T06:45:13.000Z</updated>
    <content type="html"><![CDATA[<p>在设置Notification的时候，有时会自己提供一个音乐文件，这是就需要在raw文件夹下存一个音乐文件，并在程序里面调用它，那么调用raw文件夹下的文件的方法就很重要了，做法很简单：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Uri</span><span class="class">.parse</span>("<span class="rule"><span class="attribute">android.resource</span>:<span class="value">//包名/<span class="string">"+资源ID);</span></span></span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Uri</span><span class="class">.parse</span>("<span class="rule"><span class="attribute">android.resource</span>:<span class="value">//cn.decay.notification/<span class="string">"+R.raw.ring);</span></span></span></span><br></pre></td></tr></table></figure>
<p>这样就能得到资源的URI了，剩下的就不难弄了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在设置Notification的时候，有时会自己提供一个音乐文件，这是就需要在raw文件夹下存一个音乐文件，并在程序里面调用它，那么调用raw文件夹下的文件的方法就很重要了，做法很简单：</p>
<figure class="highlight css"><table><t]]>
    </summary>
    
      <category term="Tips" scheme="http://decaylong.net/tags/Tips/"/>
    
      <category term="资源调用" scheme="http://decaylong.net/tags/%E8%B5%84%E6%BA%90%E8%B0%83%E7%94%A8/"/>
    
      <category term="Android" scheme="http://decaylong.net/categories/Android/"/>
    
  </entry>
  
</feed>